What happens when you initialize a repository? Why do you need to do it?
It creates a .git directory. We need it in order to track changes made to the various files in working directory.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It only keeps track of some files. We can use it to save only changes made in certain files instead of also keeping track of files where no changes are made.

How can you use the staging area to make sure you have one commit per logical change?
Use git diff --staged to check if only 1 change has been made, compared to the previous commit

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to test a new feature, you can create a branch. The original project will not get modified and we can easily navigate betqeen the different branches.

How do the diagrams help you visualize the branch structure?
Helps us better understand what the branch structure looks like and makes it easier for us to navigate through the branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together results in a new commit that includes the changes made in both branches.
Because the two separate branches end up "merging" to form a new commit.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
Pros of automatic merging: 
-Most of the time, it is more efficient than having to manually select which parts to retain and which ones to remove.
-Less prone to errors resulting from incorrect merging

Cons of automatic merging:
-We have less control over what changes are made 
-Still results in merging errors, which have to fixed manually